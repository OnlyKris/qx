# DivineEngine Quantumult 配置示例
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# 最新完整的示例需查看 Quantumult X 里「配置文件」中的「示例」
#

[general]
;profile_img_url=http://www.example.com/example.png

# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js

# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://www.gstatic.com/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
excluded_routes=239.255.255.250/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

# udp_whitelist 包含目标 UDP 端口，空表示所有的端口都在 udp_whitelist 中。通过Quantumult 隧道接口发送的 UDP 数据包(通过 Quantumult 隧道接口)，目标端口不在 udp_whitelist 中的 UDP 包将被丢弃。这个设置与策略无关，也与代理(服务器)端口无关。
;udp_whitelist=53, 123, 1900, 80-443

;icmp_auto_reply=true


[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的DNS服务器，如「server=223.5.5.5.5」)。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
# server=223.5.5.5

# 本地 DNS 映射
# Firebase Cloud Messaging
address=/mtalk.google.com/108.177.125.188

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


[policy]
#
# 需要策略图标的在策略后加上：img-url=http://example.com/icon.png
#

# 类型：静态(static)
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 类型：可用(available)
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 类型：负载均衡(round-robin)
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# 类型：延迟测试(url-latency-benchmark)
# 策略指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# 当用户在 Quantumult X 中手动启动 URL 测试时，策略结果也会被更新。
# 该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
;url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=0

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

static=🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港,🇯🇵 日本,🇸🇬 新加坡,🇺🇸 美国, PROXY, DIRECT, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Available.png
# 默认设置10分钟测速一次，当前使用节点延迟和最新测速延迟最低的节点相差100ms以上则切换为最新的最低延迟节点，否则继续延用节点
url-latency-benchmark=♻️ 自动选择, server-tag-regex=.*, check-interval=600, tolerance=100, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Auto.png
url-latency-benchmark=🇭🇰 香港, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$, check-interval=600, tolerance=50, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Hong_Kong.png
url-latency-benchmark=🇯🇵 日本, server-tag-regex=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$, check-interval=600, tolerance=100, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Japan.png
url-latency-benchmark=🇸🇬 新加坡, server-tag-regex=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$, check-interval=600, tolerance=100, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Singapore.png
url-latency-benchmark=🇺🇸 美国, server-tag-regex=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$, check-interval=600, tolerance=100, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/United_States.png
static=🐟 漏网之鱼, 🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港,🇯🇵 日本,🇸🇬 新加坡,🇺🇸 美国, PROXY, DIRECT, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png

# Clubhouse
static=Clubhouse, direct, proxy, img-url=https://raw.githubusercontent.com/tengyuankoo/qx/main/Clubhouse.png

[server_remote]
#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#

https://5fiuyinm.buzz/s/itCKwNuHb9qwjpTFu39V, tag=KuaiLiMao, update-interval=86400, opt-parser=true, enabled=true
https://kcssr.best/link/F2Guzq2wil4ZGgTG?sub=1, tag=KCSSR, update-interval=86400, opt-parser=true, enabled=true

[filter_remote]
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#

# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Unbreak.list, tag=🎯规则修正-直连, update-interval=86400, opt-parser=false, enabled=true

# Advertising 广告
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag=🛑轻量广告拦截-拒绝, update-interval=86400, opt-parser=false, enabled=true

# NobyDa大佬去广告 -默认关闭，自行手动启用！
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/AdRule.list, tag=🛑重度广告拦截-拒绝, force-policy=reject, update-interval=86400, opt-parser=false, enabled=false

# Privacy 隐私
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Privacy.list, tag=🛑隐私保护-拒绝, update-interval=86400, opt-parser=false, enabled=true

# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Hijacking.list, tag=🛑运营商劫持-拒绝, update-interval=86400, opt-parser=false, enabled=true

# Clubhouse
# Clubhouse 域名规则
https://raw.githubusercontent.com/tengyuankoo/qx/main/Clubhouse.list, tag=Clubhouse, force-policy=Clubhouse, update-interval=86400, opt-parser=false, enabled=true 
# Clubhouse IP规则 
https://raw.githubusercontent.com/tengyuankoo/qx/main/Clubhouse_IP.list, tag=Clubhouse_IP, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true

## adblock4limbo
http://limbopro.xyz/Adblock4limbo.list, tag=毒奶特供, force-policy=reject, enabled=true

# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Streaming.list, , tag=🚀 节点选择, force-policy=🚀 节点选择, update-interval=86400, opt-parser=false , enabled=true

# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Global.list, tag=🚀 节点选择, force-policy=🚀 节点选择, update-interval=86400, opt-parser=false , enabled=true

# China 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag=🎯国内网站-直连, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true

# 推荐使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确，以及因规则类型优先级(GEOIP > IP-CIDR)导致的问题，使用 ChinaIP.list 时需禁用「GEOIP,CN」规则
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag=🇨🇳ChinaIP(与「geoip, cn, direct」二选一), update-interval=86400, enabled=true

[rewrite_remote]

#
# 参数「tag」和「enabled」是可选的。
#

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rewrite/QuantumultX/AllInOne/AllInOne.conf, tag=AllInOne, update-interval=86400, opt-parser=false, enabled=true

# General
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, opt-parser=false, enabled=false

# Block Advertising
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=86400, opt-parser=false, enabled=false

# Block Advertising+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=86400, opt-parser=false, enabled=true

# Block YouTube Ads
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡YouTube Premium 禁用, update-interval=86400, opt-parser=false, enabled=true

## adblock4limbo
http://limbopro.xyz/Adblock4limbo.conf, tag=毒奶特供, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_plus.qxrewrite, tag=知乎助手_去广告及体验增强, update-interval=86400, opt-parser=false, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/startup/startup.qxrewrite, tag=开屏去广告, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/bilibili/bilibili_plus.qxrewrite, tag=哔哩哔哩_去广告, update-interval=86400, opt-parser=false, enabled=true

[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# GeoIP China(若启用，则禁用 ChinaIP.list)
-geoip, cn, direct

# 知乎去广告
DOMAIN,118.89.204.198,REJECT
DOMAIN-KEYWORD,118.89.204.198,REJECT
IP-CIDR,118.89.204.198/32,REJECT
DOMAIN,appcloud2.in.zhihu.com,REJECT
USER-AGENT,AVOS*,REJECT

FINAL,🐟 漏网之鱼

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

# 爱美剧Vip (by huihui）(官网：app.meiju2018.com)
^https?:\/\/api.bjxkhc.com\/index\.php\/app\/ios\/(vod\/show|(user|vod|topic|type)\/index) url script-response-body https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/File/aimeiju.js

# Netflix评分
^https?://ios\.prod\.ftl\.netflix\.com/iosui/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D url script-request-header https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js
^https?://ios\.prod\.ftl\.netflix\.com/iosui/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js

# Display jd historical price
^https?://api\.m\.jd\.com/client\.action\?functionId=(wareBusiness|serverConfig|basicConfig) url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/jd_price.js

# 去微信公众号广告 (By Choler)
^https?:\/\/mp\.weixin\.qq\.com\/mp\/getappmsgad url script-response-body https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/File/Wechat.js

# Display taobao historical price
^http://.+/amdc/mobileDispatch url script-request-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
^https?://trade-acs\.m\.taobao\.com/gw/mtop\.taobao\.detail\.getdetail url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

# BoxJs
# https://gitee.com/chavyleung/scripts/raw/master/box/chavy.boxjs.js, tag=BoxJs.net, path=^/, enabled=false

[mitm]
hostname = api.m.jd.com, trade-acs.m.taobao.com, ios.prod.ftl.netflix.com
passphrase = 070638E1
p12 = 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
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com